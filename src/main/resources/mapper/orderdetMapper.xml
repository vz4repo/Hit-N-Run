<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.homerunball.order.dao.OrderDetDao">

  <select id="count" resultType="int">
    select count(*)
    from ord_det;
  </select>

  <delete id="delete" parameterType="map">
    delete
    from ord_det
    where od_det_seqnum = #{od_det_seqnum}
      and od_id = #{od_id}
      and c_id = #{c_id}
  </delete>

  <delete id="deleteAll">
    delete
    from ord_det
  </delete>

  <select id="select" parameterType="Integer" resultType="OrderDetDto">
    select od.od_det_seqnum           -- 주문고유seq
         , od.od_id                   -- 주문id
         , od.c_id
         , od.pd_id                   -- 상품id
         , od.pd_clsf_cd              -- 상품옵션
         , od.od_dt                   -- 주문일자
         , od.pd_name                 -- 상품명
         , od.sls_prc                 -- 소비자가
         , od.od_qty                  -- 수량
         , cd1.cd_name 'od_stat_name' -- 주문상태명
         , cd2.cd_name 'brd_name'     -- 브랜드명
         , pd.pd_type_cd              -- 사진경로1(분류)
         , pd.mn_img_fn               -- 사진경로2(파일명)
    from ord_det od,
         prd pd,
         cmn_cd cd1,
         cmn_cd cd2
    WHERE od.c_id = #{c_id}
      and cd1.cd = 510 -- 510:주문상태
      and cd2.cd = 403 -- 403:브랜드
      and od.pd_id = pd.pd_id
      and od.od_stat_cd = cd1.cd_type_id
      and pd.brd_cd = cd2.cd_type_id
    order by od.od_id desc, od.od_det_seqnum
  </select>

  <select id="idselect" parameterType="biginteger" resultType="OrderDetDto">
    select od_det_seqnum
         , od_id
         , c_id
         , pd_id
         , pd_clsf_cd
         , od_dt
         , pd_name
         , sls_prc
         , od_qty
         , od_stat_cd
         , frst_reg_dt
         , frst_reg_id
         , last_mod_dt
         , last_mod_id
    from ord_det
    where od_id = #{od_id}
    order by frst_reg_dt desc, od_det_seqnum desc
  </select>

  <select id="selectAll" resultType="OrderDetDto">
    select od_det_seqnum
         , od_id
         , c_id
         , pd_id
         , pd_clsf_cd
         , od_dt
         , pd_name
         , sls_prc
         , od_qty
         , od_stat_cd
         , frst_reg_dt
         , frst_reg_id
         , last_mod_dt
         , last_mod_id
    from ord_det
    order by frst_reg_dt desc, od_det_seqnum desc
  </select>

  <insert id="insert" parameterType="OrderDetDto">
    INSERT INTO ord_det
    (od_det_seqnum, od_id, c_id, pd_id, pd_clsf_cd, od_dt, pd_name, sls_prc, od_qty)
    select (select IFNULL(max(od_det_seqnum), 0) + 1 from ord_det where od_id = (select max(od_id) + 1 from ord))
--             ,(select CONCAT(DATE_FORMAT(CURDATE(), '%Y%m%d'), LPAD(IFNULL(max(substr(o.od_id, 9)),0)+1, 4, '0')) from ord o)
         , (select LPAD(IFNULL(max(o.od_id), 0) + 1, 12, '0') from ord o)
         , #{c_id}
         , #{pd_id}
         , #{pd_clsf_cd}
         , now()
         , #{pd_name}
         , #{sls_prc}
         , #{od_qty};
  </insert>

  <!--    <insert id="insert" parameterType="OrderDetDto">-->
  <!--        <selectKey keyProperty="od_det_seqnum" order="AFTER" resultType="java.lang.String">-->
  <!--            select 	(select IFNULL(max(od_det_seqnum), 0)+1  from ord_det where od_id = (select max(od_id)+1 from ord))-->
  <!--        </selectKey>-->
  <!--        insert  into ord_det-->
  <!--        (od_det_seqnum, c_id, pd_id, pd_clsf_cd, od_dt, pd_name, sls_prc, od_qty, od_stat_cd, frst_reg_dt, frst_reg_id, last_mod_dt, last_mod_id)-->
  <!--        values-->
  <!--(#{od_det_seqnum},#{od_id}, #{c_id}, #{pd_id}, #{pd_clsf_cd}, #{od_dt},#{pd_name},#{sls_prc},#{od_qty},#{od_stat_cd},#{frst_reg_dt},#{frst_reg_id},#{last_mod_dt},#{last_mod_id})-->
  <!--    </insert>-->

  <update id="update" parameterType="OrderDetDto">
    update ord_det
    set od_id       = #{od_id}
      , c_id        = #{c_id}
      , pd_id       = #{pd_id}
      , pd_clsf_cd  = #{pd_clsf_cd}
      , od_dt       = #{od_dt}
      , pd_name     = #{pd_name}
      , sls_prc     = #{sls_prc}
      , od_qty      = #{od_qty}
      , od_stat_cd  = #{od_stat_cd}
      , frst_reg_dt = #{frst_reg_dt}
      , frst_reg_id = #{frst_reg_id}
      , last_mod_dt = #{last_mod_dt}
      , last_mod_id = #{last_mod_id}
    where od_det_seqnum = #{od_det_seqnum}
    order by od_id desc;
  </update>

  <select id="findById" parameterType="string" resultType="OrderDetDto">
    SELECT *
    FROM ord_det
    WHERE od_id = #{od_Id}
  </select>

  <update id="updateOrderStatus" parameterType="OrderDetDto">
    update ord_det
    set od_stat_cd = '04'           -- 주문취소신청
    where od_id         = #{od_id}
      and pd_id         = #{pd_id}
      and pd_clsf_cd    = #{pd_clsf_cd}
      and c_id          = #{c_id}
    -- 1건 나와야 성공, 그 외에 뭐지?
  </update>

  <select id="selectPaymentHistoryWithDateRange" parameterType="map" resultType="OrderDetDto">
    select od.od_id                   -- 주문id
         , od.pd_id                   -- 상품id
         , od.pd_clsf_cd              -- 상품옵션
         , od.od_dt                   -- 주문일자
         , od.pd_name                 -- 상품명
         , od.sls_prc                 -- 소비자가
         , od.od_qty                  -- 수량
         , cd1.cd_name 'od_stat_name' -- 주문상태명
         , cd2.cd_name 'brd_name'     -- 브랜드명
         , pd.pd_type_cd              -- 사진경로1(분류)
         , pd.mn_img_fn               -- 사진경로2(파일명)
    from ord_det od,
         prd pd,
         cmn_cd cd1,
         cmn_cd cd2
    WHERE od.c_id = #{c_id}
      and od_dt BETWEEN #{fromDate} AND #{toDate}
      and cd1.cd = 510 -- 510:주문상태
      and cd2.cd = 403 -- 403:브랜드
      and od.pd_id = pd.pd_id
      and od.od_stat_cd = cd1.cd_type_id
      and pd.brd_cd = cd2.cd_type_id
    order by od.od_id desc, od.od_det_seqnum
  </select>
</mapper>